name: 🌀 Deploy TARDIS to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Checkout TARDIS
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js (Sonic Screwdriver)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 🛠️ Install temporal dependencies
        run: npm ci

      - name: 🔍 Run SCSS diagnostics (Linting)
        run: npm run lint:scss

      - name: ✨ Format check (Prettier)
        run: npm run format:check

      - name: 🎨 Compile SCSS to CSS (Regenerate styles)
        run: npm run build-css

      - name: 📄 Setup GitHub Pages
        uses: actions/configure-pages@v4

      - name: 🚀 Upload TARDIS artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 🌟 Deploy TARDIS to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
